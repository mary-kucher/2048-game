{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/scripts/Game.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","src/scripts/Matrix.js","src/scripts/Tile.js"],"sourcesContent":["(function () {\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n/* eslint-disable */ \n\n\n\nvar $2bea008d35ac202e$export$2e2bcd8739ae039 = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Tile(x, y) {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Tile);\n        this.value = Math.random() < 0.9 ? 2 : 4;\n        this.tileHTML = document.createElement(\"div\");\n        this.position = {\n            row: x,\n            cell: y,\n            indexArr: x * 4 + y\n        };\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Tile, [\n        {\n            key: \"setNewPosition\",\n            value: function setNewPosition(rowIndex, cellIndex) {\n                this.position = {\n                    row: rowIndex,\n                    cell: cellIndex,\n                    indexArr: rowIndex * 4 + cellIndex\n                };\n            }\n        },\n        {\n            key: \"merge\",\n            value: function merge(tile) {\n                this.value += tile.value;\n                tile.setNewPosition(this.position.row, this.position.cell);\n                this.tileHTML.style.zIndex = \"2\";\n                tile.tileHTML.style.zIndex = \"1\";\n                tile.render();\n                setTimeout(function() {\n                    return tile.tileHTML.remove();\n                }, 300);\n            }\n        },\n        {\n            key: \"render\",\n            value: function render() {\n                var allTd = document.querySelectorAll(\".field-cell\");\n                this.tileHTML.textContent = \"\".concat(this.value);\n                this.tileHTML.className = \"tile tile--\".concat(this.value);\n                // eslint-disable-next-line no-shadow\n                var _allTd_this_position_indexArr_getBoundingClientRect = allTd[this.position.indexArr].getBoundingClientRect(), top = _allTd_this_position_indexArr_getBoundingClientRect.top, left = _allTd_this_position_indexArr_getBoundingClientRect.left;\n                this.tileHTML.style.top = \"\".concat(top, \"px\");\n                this.tileHTML.style.left = \"\".concat(left, \"px\");\n            }\n        },\n        {\n            key: \"addTileToView\",\n            value: function addTileToView() {\n                var containerTile = document.querySelector(\".tile-container\");\n                containerTile.append(this.tileHTML);\n            }\n        }\n    ]);\n    return Tile;\n}();\n\n\nvar $df2b79eab7732df0$export$2e2bcd8739ae039 = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Matrix() {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Matrix);\n        this.matrix = [\n            [\n                null,\n                null,\n                null,\n                null\n            ],\n            [\n                null,\n                null,\n                null,\n                null\n            ],\n            [\n                null,\n                null,\n                null,\n                null\n            ],\n            [\n                null,\n                null,\n                null,\n                null\n            ]\n        ];\n        this.wasMove = false;\n        this.maxTileValue = 2048;\n        this.wasMerge = false;\n        this.mergedTilesSum = 0;\n        this.win = false;\n        this.addTile();\n        this.addTile();\n        this.updated();\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Matrix, [\n        {\n            key: \"coordsEmptyTiles\",\n            value: function coordsEmptyTiles() {\n                return this.matrix.map(function(row, x) {\n                    return row.map(function(cell, y) {\n                        if (cell == null) return {\n                            x: x,\n                            y: y\n                        };\n                    });\n                }).flat().filter(function(el) {\n                    return el;\n                });\n            }\n        },\n        {\n            key: \"addTile\",\n            value: function addTile() {\n                var freeTiles = this.coordsEmptyTiles();\n                var randomNumber = Math.floor(Math.random() * freeTiles.length);\n                var _freeTiles_randomNumber = freeTiles[randomNumber], x = _freeTiles_randomNumber.x, y = _freeTiles_randomNumber.y;\n                this.matrix[x][y] = new (0, $2bea008d35ac202e$export$2e2bcd8739ae039)(x, y);\n                this.matrix[x][y].addTileToView();\n            }\n        },\n        {\n            key: \"updated\",\n            value: function updated() {\n                for(var i = 0; i < this.matrix.length; i++){\n                    for(var j = 0; j < this.matrix.length; j++)if (this.matrix[i][j]) {\n                        this.matrix[i][j].setNewPosition(i, j);\n                        this.matrix[i][j].render();\n                    }\n                }\n            }\n        },\n        {\n            key: \"clear\",\n            value: function clear() {\n                this.matrix.flat().filter(function(el) {\n                    return el;\n                }).forEach(function(tile) {\n                    tile.tileHTML.remove();\n                });\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.cleanMoveMerge();\n                this.shift(false);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.cleanMoveMerge();\n                this.shift();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.cleanMoveMerge();\n                this.shiftUpDown(false);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.cleanMoveMerge();\n                this.shiftUpDown();\n            }\n        },\n        {\n            key: \"swapTiles\",\n            value: function swapTiles(x1, y1, x2, y2) {\n                var current = this.matrix[x1][y1];\n                this.matrix[x1][y1] = this.matrix[x2][y2];\n                this.matrix[x2][y2] = current;\n                this.wasMove = true;\n            }\n        },\n        {\n            key: \"shift\",\n            value: function shift() {\n                var moveRight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n                for(var i = 0; i < this.matrix.length; i++){\n                    var current = moveRight ? this.matrix.length - 1 : 0;\n                    var next = moveRight ? current - 1 : 1;\n                    var increment = moveRight ? -1 : 1;\n                    while(next < this.matrix.length && next >= 0)if (!this.matrix[i][next]) next += increment;\n                    else {\n                        if (!this.matrix[i][current]) {\n                            this.swapTiles(i, current, i, next);\n                            next += increment;\n                        } else if (this.matrix[i][current].value === this.matrix[i][next].value) {\n                            this.matrix[i][current].setNewPosition(i, current);\n                            this.mergeTiles(i, next, i, current);\n                            current += increment;\n                            next += increment;\n                        } else {\n                            current += increment;\n                            if (current === next) next += increment;\n                        }\n                    }\n                }\n            }\n        },\n        {\n            key: \"shiftUpDown\",\n            value: function shiftUpDown() {\n                var moveDown = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n                for(var i = 0; i < this.matrix.length; i++){\n                    var current = moveDown ? this.matrix.length - 1 : 0;\n                    var next = moveDown ? current - 1 : 1;\n                    var increment = moveDown ? -1 : 1;\n                    while(next < this.matrix.length && next >= 0)if (!this.matrix[next][i]) next += increment;\n                    else {\n                        if (!this.matrix[current][i]) {\n                            this.swapTiles(current, i, next, i);\n                            next += increment;\n                        } else if (this.matrix[current][i].value === this.matrix[next][i].value) {\n                            this.matrix[current][i].setNewPosition(current, i);\n                            this.mergeTiles(next, i, current, i);\n                            current += increment;\n                            next += increment;\n                        } else {\n                            current += increment;\n                            if (current === next) next += increment;\n                        }\n                    }\n                }\n            }\n        },\n        {\n            key: \"mergeTiles\",\n            value: function mergeTiles(x1, y1, x2, y2) {\n                this.wasMerge = true;\n                var value = this.matrix[x1][y1].value;\n                this.mergedTilesSum += value * 2;\n                this.matrix[x2][y2].merge(this.matrix[x1][y1]);\n                this.matrix[x1][y1] = null;\n                if (this.matrix[x2][y2].value === this.maxTileValue) this.win = true;\n            }\n        },\n        {\n            key: \"cleanMoveMerge\",\n            value: function cleanMoveMerge() {\n                this.wasMove = false;\n                this.wasMerge = false;\n            }\n        },\n        {\n            key: \"isMergePossible\",\n            value: function isMergePossible() {\n                return this.matrix.flat().some(function(tile, i, arr) {\n                    var value = tile.value;\n                    if ((i + 1) % 4 !== 0 && value === arr[i + 1].value) return true;\n                    else if (i + 4 <= arr.length - 1 && value === arr[i + 4].value) return true;\n                    else return false;\n                });\n            }\n        }\n    ]);\n    return Matrix;\n}();\n\n\nvar $15869a468e1474ad$export$2e2bcd8739ae039 = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Game() {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.score = 0;\n        this.table = new (0, $df2b79eab7732df0$export$2e2bcd8739ae039)();\n        this.listenerArrows = this.handleArrowsButtonPressing.bind(this);\n        this.touchStartListener = this.handleTouchStart.bind(this);\n        this.touchEndListener = this.handleTouchEnd.bind(this);\n        this.gameField = document.querySelector(\".game-field\");\n        this.endGame = document.querySelector(\".message-lose\");\n        this.addScore = document.querySelector(\".game-score\");\n        this.winGame = document.querySelector(\".message-win\");\n        this.arrows = [\n            \"ArrowLeft\",\n            \"ArrowUp\",\n            \"ArrowRight\",\n            \"ArrowDown\"\n        ];\n        document.addEventListener(\"keydown\", this.listenerArrows);\n        this.x1 = null;\n        this.y1 = null;\n        this.gameField.addEventListener(\"touchstart\", this.touchStartListener);\n        this.gameField.addEventListener(\"touchmove\", this.touchEndListener);\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"handleTouchStart\",\n            value: function handleTouchStart(ev) {\n                ev.preventDefault();\n                var firstTouch = ev.touches[0];\n                this.x1 = firstTouch.clientX;\n                this.y1 = firstTouch.clientY;\n            }\n        },\n        {\n            key: \"handleTouchEnd\",\n            value: function handleTouchEnd(ev) {\n                ev.preventDefault();\n                if (!this.x1 || !this.y1) return false;\n                var x2 = ev.touches[0].clientX;\n                var y2 = ev.touches[0].clientY;\n                var diffX = x2 - this.x1;\n                var diffY = y2 - this.y1;\n                if (Math.abs(diffX) > Math.abs(diffY)) {\n                    if (diffX > 0) this.table.moveRight();\n                    else this.table.moveLeft();\n                } else if (diffY > 0) this.table.moveDown();\n                else this.table.moveUp();\n                this.x1 = null;\n                this.y1 = null;\n                this.allChecks();\n            }\n        },\n        {\n            key: \"handleArrowsButtonPressing\",\n            value: function handleArrowsButtonPressing(ev) {\n                if (!this.arrows.includes(ev.key)) return;\n                ev.preventDefault();\n                switch(ev.key){\n                    case \"ArrowLeft\":\n                        this.table.moveLeft();\n                        break;\n                    case \"ArrowUp\":\n                        this.table.moveUp();\n                        break;\n                    case \"ArrowRight\":\n                        this.table.moveRight();\n                        break;\n                    case \"ArrowDown\":\n                        this.table.moveDown();\n                        break;\n                }\n                this.allChecks();\n            }\n        },\n        {\n            key: \"allChecks\",\n            value: function allChecks() {\n                var _this = this;\n                if (this.table.wasMove || this.table.wasMerge) this.table.addTile();\n                this.table.updated();\n                if (this.table.wasMerge) {\n                    this.score += this.table.mergedTilesSum;\n                    this.table.mergedTilesSum = 0;\n                }\n                this.addScore.textContent = this.score;\n                if (this.table.coordsEmptyTiles().length < 1 && !this.table.isMergePossible()) setTimeout(function() {\n                    return _this.endGame.classList.remove(\"hidden\");\n                }, 1000);\n                else if (this.table.win) this.winGame.classList.remove(\"hidden\");\n            }\n        },\n        {\n            key: \"stop\",\n            value: function stop() {\n                document.removeEventListener(\"keydown\", this.listenerArrows);\n                this.gameField.removeEventListener(\"touchstart\", this.touchStartListener);\n                this.gameField.removeEventListener(\"touchmove\", this.touchEndListener);\n                this.table.clear();\n                this.endGame.classList.add(\"hidden\");\n                this.winGame.classList.add(\"hidden\");\n                this.score = 0;\n                this.addScore.textContent = \"0\";\n            }\n        }\n    ]);\n    return Game;\n}();\n\n\nvar $197cd56b15c33885$var$button = document.querySelector(\"button\");\nvar $197cd56b15c33885$var$game;\n$197cd56b15c33885$var$button.addEventListener(\"click\", function(ev) {\n    var startMess = document.querySelector(\".message-start\");\n    if ($197cd56b15c33885$var$game) $197cd56b15c33885$var$game.stop();\n    startMess.classList.add(\"hidden\");\n    $197cd56b15c33885$var$game = new (0, $15869a468e1474ad$export$2e2bcd8739ae039)();\n    $197cd56b15c33885$var$button.classList.remove(\"start\");\n    $197cd56b15c33885$var$button.classList.add(\"restart\");\n    $197cd56b15c33885$var$button.textContent = \"Restart\";\n});\n\n})();\n//# sourceMappingURL=index.d480e146.js.map\n","import Game from './Game';\n\nconst button = document.querySelector('button');\nlet game;\n\nbutton.addEventListener('click', (ev) => {\n  const startMess = document.querySelector('.message-start');\n\n  if (game) {\n    game.stop();\n  }\n  startMess.classList.add('hidden');\n  game = new Game();\n  button.classList.remove('start');\n  button.classList.add('restart');\n  button.textContent = 'Restart';\n});\n","import Matrix from './Matrix';\n\nexport default class Game {\n  constructor() {\n    this.score = 0;\n    this.table = new Matrix();\n    this.listenerArrows = this.handleArrowsButtonPressing.bind(this);\n    this.touchStartListener = this.handleTouchStart.bind(this);\n    this.touchEndListener = this.handleTouchEnd.bind(this);\n    this.gameField = document.querySelector('.game-field');\n    this.endGame = document.querySelector('.message-lose');\n    this.addScore = document.querySelector('.game-score');\n    this.winGame = document.querySelector('.message-win');\n    this.arrows = ['ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown'];\n    document.addEventListener('keydown', this.listenerArrows);\n    this.x1 = null;\n    this.y1 = null;\n    this.gameField.addEventListener('touchstart', this.touchStartListener);\n    this.gameField.addEventListener('touchmove', this.touchEndListener);\n  }\n  handleTouchStart(ev) {\n    ev.preventDefault();\n\n    const firstTouch = ev.touches[0];\n\n    this.x1 = firstTouch.clientX;\n    this.y1 = firstTouch.clientY;\n  }\n  handleTouchEnd(ev) {\n    ev.preventDefault();\n\n    if (!this.x1 || !this.y1) {\n      return false;\n    }\n\n    const x2 = ev.touches[0].clientX;\n    const y2 = ev.touches[0].clientY;\n    const diffX = x2 - this.x1;\n    const diffY = y2 - this.y1;\n\n    if (Math.abs(diffX) > Math.abs(diffY)) {\n      if (diffX > 0) {\n        this.table.moveRight();\n      } else {\n        this.table.moveLeft();\n      }\n    } else {\n      if (diffY > 0) {\n        this.table.moveDown();\n      } else {\n        this.table.moveUp();\n      }\n    }\n    this.x1 = null;\n    this.y1 = null;\n    this.allChecks();\n  }\n\n  handleArrowsButtonPressing(ev) {\n    if (!this.arrows.includes(ev.key)) {\n      return;\n    }\n    ev.preventDefault();\n\n    switch (ev.key) {\n      case 'ArrowLeft':\n        this.table.moveLeft();\n        break;\n      case 'ArrowUp':\n        this.table.moveUp();\n        break;\n      case 'ArrowRight':\n        this.table.moveRight();\n        break;\n      case 'ArrowDown':\n        this.table.moveDown();\n        break;\n    }\n    this.allChecks();\n  }\n\n  allChecks() {\n    if (this.table.wasMove || this.table.wasMerge) {\n      this.table.addTile();\n    }\n    this.table.updated();\n\n    if (this.table.wasMerge) {\n      this.score += this.table.mergedTilesSum;\n      this.table.mergedTilesSum = 0;\n    }\n\n    this.addScore.textContent = this.score;\n\n    if (this.table.coordsEmptyTiles().length < 1\n      && !this.table.isMergePossible()) {\n      setTimeout(() => this.endGame.classList.remove('hidden'), 1000);\n    } else if (this.table.win) {\n      this.winGame.classList.remove('hidden');\n    }\n  }\n\n  stop() {\n    document.removeEventListener('keydown', this.listenerArrows);\n    this.gameField.removeEventListener('touchstart', this.touchStartListener);\n    this.gameField.removeEventListener('touchmove', this.touchEndListener);\n    this.table.clear();\n    this.endGame.classList.add('hidden');\n    this.winGame.classList.add('hidden');\n    this.score = 0;\n    this.addScore.textContent = '0';\n  }\n}\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","/* eslint-disable */\nimport Tile from './Tile';\n\nexport default class Matrix {\n  constructor() {\n    this.matrix = [\n      [null, null, null, null],\n      [null, null, null, null],\n      [null, null, null, null],\n      [null, null, null, null],\n    ];\n    this.wasMove = false;\n    this.maxTileValue = 2048;\n    this.wasMerge = false;\n    this.mergedTilesSum = 0;\n    this.win = false;\n    this.addTile();\n    this.addTile();\n    this.updated();\n  }\n\n  coordsEmptyTiles() {\n    return this.matrix.map((row,x) =>\n      row.map((cell, y) => {\n        if (cell == null) {\n          return {x: x, y: y}\n        }\n      })\n    ).flat().filter(el => el)\n  }\n\n  addTile() {\n    const freeTiles = this.coordsEmptyTiles();\n    let randomNumber = Math.floor(Math.random() * freeTiles.length)\n    let { x, y } = freeTiles[randomNumber];\n    this.matrix[x][y] = new Tile(x, y);\n    this.matrix[x][y].addTileToView();\n  }\n\n  updated() {\n    for (let i = 0; i < this.matrix.length; i++) {\n      for (let j = 0; j < this.matrix.length; j++) {\n        if (this.matrix[i][j]) {\n          this.matrix[i][j].setNewPosition(i, j);\n          this.matrix[i][j].render();\n        }\n      }\n    }\n  }\n\n  clear() {\n    this.matrix.flat().filter(el => el).forEach(tile => {\n      tile.tileHTML.remove();\n    })\n  }\n\n  moveLeft() {\n    this.cleanMoveMerge();\n    this.shift(false);\n  }\n\n  moveRight() {\n    this.cleanMoveMerge();\n    this.shift();\n  }\n\n  moveUp() {\n    this.cleanMoveMerge();\n    this.shiftUpDown(false);\n  }\n\n  moveDown() {\n    this.cleanMoveMerge();\n    this.shiftUpDown();\n  }\n\n  swapTiles(x1, y1, x2, y2) {\n    let current = this.matrix[x1][y1];\n    this.matrix[x1][y1] = this.matrix[x2][y2];\n    this.matrix[x2][y2] = current;\n    this.wasMove = true;\n  }\n\n  shift(moveRight = true) {\n    for (let i = 0; i < this.matrix.length; i++) {\n      let current = moveRight ? this.matrix.length - 1 : 0;\n      let next = moveRight ? current - 1 : 1;\n      let increment = moveRight ? -1 : 1;\n      while (next < this.matrix.length && next >= 0) {\n        if (!this.matrix[i][next]) {\n          next += increment;\n        } else {\n          if (!this.matrix[i][current]) {\n            this.swapTiles(i, current, i, next)\n            next += increment;\n          } else if (this.matrix[i][current].value === this.matrix[i][next].value) {\n            this.matrix[i][current].setNewPosition(i, current);\n            this.mergeTiles(i, next, i, current);\n            current += increment;\n            next += increment;\n          } else {\n            current += increment;\n            if (current === next) {\n              next += increment;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  shiftUpDown(moveDown = true) {\n    for (let i = 0; i < this.matrix.length; i++) {\n      let current = moveDown ? this.matrix.length - 1 : 0;\n      let next = moveDown ? current - 1 : 1;\n      let increment = moveDown ? -1 : 1;\n      while (next < this.matrix.length && next >= 0) {\n        if (!this.matrix[next][i]) {\n          next += increment;\n        } else {\n          if (!this.matrix[current][i]) {\n            this.swapTiles(current, i, next, i)\n            next += increment;\n          } else if (this.matrix[current][i].value === this.matrix[next][i].value) {\n            this.matrix[current][i].setNewPosition(current, i);\n            this.mergeTiles(next, i, current, i);\n            current += increment;\n            next += increment;\n          } else {\n            current += increment;\n            if (current === next) {\n              next += increment;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  mergeTiles(x1, y1, x2, y2) {\n    this.wasMerge = true;\n    let value = this.matrix[x1][y1].value;\n    this.mergedTilesSum += value * 2;\n    this.matrix[x2][y2].merge(this.matrix[x1][y1]);\n    this.matrix[x1][y1] = null;\n    if (this.matrix[x2][y2].value === this.maxTileValue) {\n      this.win = true;\n    }\n  }\n\n  cleanMoveMerge() {\n    this.wasMove = false;\n    this.wasMerge = false;\n  }\n\n  isMergePossible() {\n    return this.matrix.flat().some((tile, i, arr) => {\n      let value = tile.value;\n      if (((i + 1) % 4 !== 0) && value === arr[i + 1].value) {\n        return true;\n      } else if (i + 4 <= arr.length - 1 && value === arr[i + 4].value) {\n        return true;\n      } else {\n        return false;\n      }\n    })\n  }\n}\n","export default class Tile {\n  constructor(x, y) {\n    this.value = Math.random() < 0.9 ? 2 : 4;\n    this.tileHTML = document.createElement('div');\n\n    this.position = {\n      row: x,\n      cell: y,\n      indexArr: x * 4 + y,\n    };\n  }\n\n  setNewPosition(rowIndex, cellIndex) {\n    this.position = {\n      row: rowIndex,\n      cell: cellIndex,\n      indexArr: rowIndex * 4 + cellIndex,\n    };\n  };\n\n  merge(tile) {\n    this.value += tile.value;\n    tile.setNewPosition(this.position.row, this.position.cell);\n    this.tileHTML.style.zIndex = '2';\n    tile.tileHTML.style.zIndex = '1';\n    tile.render();\n    setTimeout(() => tile.tileHTML.remove(), 300);\n  }\n\n  render() {\n    const allTd = document.querySelectorAll('.field-cell');\n\n    this.tileHTML.textContent = `${this.value}`;\n    this.tileHTML.className = `tile tile--${this.value}`;\n\n    // eslint-disable-next-line no-shadow\n    const { top, left } = allTd[this.position.indexArr]\n      .getBoundingClientRect();\n\n    this.tileHTML.style.top = `${top}px`;\n    this.tileHTML.style.left = `${left}px`;\n  }\n\n  addTileToView() {\n    const containerTile = document.querySelector('.tile-container');\n\n    containerTile.append(this.tileHTML);\n  }\n}\n"],"names":["$8713978b2328d32b$export$2996f80ef42b8419","instance","Constructor","TypeError","$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$4fc75ccb937ab1df$export$d60067ff2358eee8","protoProps","staticProps","prototype","$197cd56b15c33885$var$game","$2bea008d35ac202e$export$2e2bcd8739ae039","Tile","x","y","value","Math","random","tileHTML","document","createElement","position","row","cell","indexArr","rowIndex","cellIndex","tile","setNewPosition","style","zIndex","render","setTimeout","remove","allTd","querySelectorAll","textContent","concat","className","_allTd_this_position_indexArr_getBoundingClientRect","getBoundingClientRect","top","left","containerTile","querySelector","append","$df2b79eab7732df0$export$2e2bcd8739ae039","Matrix","matrix","wasMove","maxTileValue","wasMerge","mergedTilesSum","win","addTile","updated","map","flat","filter","el","freeTiles","coordsEmptyTiles","randomNumber","floor","_freeTiles_randomNumber","addTileToView","j","forEach","cleanMoveMerge","shift","shiftUpDown","x1","y1","x2","y2","current","moveRight","arguments","next","increment","mergeTiles","swapTiles","moveDown","merge","some","arr","$15869a468e1474ad$export$2e2bcd8739ae039","Game","score","table","listenerArrows","handleArrowsButtonPressing","bind","touchStartListener","handleTouchStart","touchEndListener","handleTouchEnd","gameField","endGame","addScore","winGame","arrows","addEventListener","ev","preventDefault","firstTouch","touches","clientX","clientY","diffX","diffY","abs","moveLeft","moveUp","allChecks","includes","_this","isMergePossible","classList","removeEventListener","clear","add","$197cd56b15c33885$var$button","startMess","stop"],"version":3,"file":"index.d480e146.js.map"}